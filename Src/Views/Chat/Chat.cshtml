@model Chat
@using Microsoft.AspNetCore.Identity
@inject UserManager<AppUser> UserManager
@{
    ViewData["Title"] = Model.Name;
}
<div class="container chat-head pt-3">
    <div class="row">
        <div class="col">
            <h2>@ViewData["Title"]</h2>
        </div>
    </div>
</div>
<div class="container chat pt-3 pb-3">
    <div class="row">
        <div class="col messages">
            @foreach (var message in Model.Messages)
            {
                @if (message.Name == UserManager.GetUserName(User))
                {
                    <div class="text-right">
                        <header><strong class="user-color">@message.Name</strong> <span>@DateTime.Now.ToString("HH:mm")</span></header>
                        <p>@message.Text</p>
                    </div>
                }
                else
                {
                    <div>
                        <header><strong>@message.Name</strong> <span>@DateTime.Now.ToString("HH:mm")</span></header>
                        <p>@message.Text</p>
                    </div>
                }
            }
        </div>
    </div>
</div>
<div class="message-row d-flex justify-content-center align-items-center">
    <div class="container pt-3 pb-3">
        <div class="row">
            <div class="col">
                <form onsubmit="sendMessage(event)" asp-controller="Chat" asp-action="CreateMessage" method="post">
                    <input type="hidden" name="id" value="@Model.Id" />
                    <label for="text">Bericht:</label><span class="required"> *</span>
                    <div class="form-row">
                        <div class="col-12 col-md">
                            <div class="form-group">
                                <input type="text" class="form-control" id="text" name="text" />
                            </div>
                        </div>
                        <div class="col-12 col-md-auto">
                            <div class="form-group text-center">
                                <input type="submit" class="btn btn-primary message-btn" value="Bericht verzenden" />
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>

<script>
    var connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    var _connectionId = '';

    connection.on("ReceiveMessage", function (data) {
        var message = document.createElement('div');
        if (data.name == '@UserManager.GetUserName(User)') {
            message.innerHTML = `
                <div class="text-right">
                    <strong class="user-color">${data.name}</strong> <span>${new Date(data.time).toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit' })}</span>
                    <p>${data.text}</p>
                </div>
            `;
        } else {
            message.innerHTML = `
                <div>
                    <strong>${data.name}</strong> <span>${new Date(data.time).toLocaleTimeString(navigator.language, { hour: '2-digit', minute: '2-digit' })}</span>
                    <p>${data.text}</p>
                </div>
            `;
        }
        var messages = document.querySelector('.messages');
        messages.appendChild(message);
        messages.animate({ scrollTop: 5000 }, 2000);
    });

    var joinRoom = function () {
        axios.post('/Chat/JoinRoom/' + _connectionId + '/@Model.Id', null)
            .then(res => {
                console.log("Zelfhulpgroep gejoined!", res);
            }).catch(err => {
                console.log("Error tijdens joinen zelfhulpgroep!", err);
            });
    };

    connection.start()
        .then(function () {
            connection.invoke('getConnectionId')
                .then(function (connectionId) {
                    _connectionId = connectionId;
                    joinRoom();
                });
        }).catch(function (err) {
            console.log(err);
        });

    var sendMessage = function (event) {
        event.preventDefault();
        var data = new FormData(event.target);
        document.getElementById('text').value = '';
        axios.post('/Chat/SendMessage', data)
            .then(res => {
                console.log("Bericht verzonden!", res);
            }).catch(err => {
                console.log("Error tijdens verzenden bericht!", err);
            });
    }
</script>
}
